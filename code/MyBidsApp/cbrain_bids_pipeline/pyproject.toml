# -------------------------------------------------------------------------
# pyproject.toml — configuration for *bids_cbrain_runner*
#
# A single PEP 621-compatible file holding metadata, build settings and
# tool-specific options.  All comments are informational; packaging tools
# ignore them at install / build time.
# -------------------------------------------------------------------------

# ──────────────────────────────────────────────────────────────────────────
# 1) Build-system requirements
#    ─────────────────────────
#    setuptools ≥ 68 is required for full PEP 621 support.
# ──────────────────────────────────────────────────────────────────────────
[build-system]
requires      = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# ──────────────────────────────────────────────────────────────────────────
# 2) Core project metadata  (PEP 621)
#    ────────────────────────────────
[project]
name            = "bids_cbrain_runner"         # public distribution name
version         = "0.1.1"                      # bump here before each release
description     = "CLI + helpers for launching CBRAIN tools on BIDS datasets"
readme          = "README.md"
license         = { text = "MIT" }
authors         = [{ name = "Raphael Gabiazon", email = "rgabiazo@uwo.ca" }]
requires-python = ">=3.9"

# Runtime dependencies (supersedes *requirements.txt*)
dependencies = [
    "requests>=2.20",
    "urllib3>=1.26",
    "certifi",
    "paramiko>=2.7",
    "PyYAML>=5.4",
    "python-dateutil",
    "six",     # compatibility shim still required by several libraries
    "pydantic>=2.0",
    "typing-extensions>=4.7",
]

# Optional “dev” extras — `pip install .[dev]`
[project.optional-dependencies]
dev = [
    "black",    # formatter
    "ruff",     # linter / auto-fixer
    "pytest",   # test runner
    "mypy",     # static type checker
]

# Console-script entry point
[project.scripts]
bids-cbrain-cli = "bids_cbrain_runner.cli:main"
cbrain-cli = "bids_cbrain_runner.cli:main"

# ──────────────────────────────────────────────────────────────────────────
# 3) Package discovery
#    ─────────────────
#    The project contains two *top-level* import packages that must be
#    shipped in the wheel:
#      • bids_cbrain_runner  – CLI + helpers
#      • openapi_client      – auto-generated bindings vendored under
#                              bids_cbrain_runner/api/cbrain_openapi
#
#    Setuptools is instructed to scan both “.” (repository root) and the
#    nested OpenAPI directory so the generated client is treated as a
#    first-class package at install time.
# ──────────────────────────────────────────────────────────────────────────
[tool.setuptools.packages.find]
where   = [".", "bids_cbrain_runner/api/cbrain_openapi"]
include = [
    "bids_cbrain_runner*",
    "openapi_client*",
]

# ──────────────────────────────────────────────────────────────────────────
# 4) Non-code data files to bundle in wheels / sdists
#    ────────────────────────────────────────────────
[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

# ──────────────────────────────────────────────────────────────────────────
# 5) Tool-specific configuration blocks
#    (formatters, linters, type-checkers)
# ──────────────────────────────────────────────────────────────────────────
[tool.black]
line-length     = 100
target-version  = ["py39"]


[tool.ruff]
line-length     = 100

[tool.ruff.lint]
select          = ["E", "F", "I", "B"]

[tool.mypy]
python_version  = "3.9"
strict          = false
